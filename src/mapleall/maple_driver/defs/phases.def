/*
 * Copyright (c) [2019-2020] Huawei Technologies Co.,Ltd.All rights reserved.
 *
 * OpenArkCompiler is licensed under the Mulan PSL v1.
 * You can use this software according to the terms and conditions of the Mulan PSL v1.
 * You may obtain a copy of Mulan PSL v1 at:
 *
 *     http://license.coscl.org.cn/MulanPSL
 *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
 * FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v1 for more details.
 */
// Phase arguments are: name, condition. By default, all phases are required, so the condition value is 'true'.
// You can use condition to control these phases and your custom phases. E.g. ADD_PHASE("custom_phase", option1 == value1 [more conditions...])
ADD_PHASE("clone", JAVALANG)
ADD_PHASE("classhierarchy", JAVALANG)
ADD_PHASE("callgraph", JAVALANG)
ADD_PHASE("vtableanalysis", JAVALANG)
ADD_PHASE("reflectionanalysis", JAVALANG)
ADD_PHASE("GenNativeStubFunc", JAVALANG)
ADD_PHASE("gencheckcast", JAVALANG)
ADD_PHASE("javaintrnlowering", JAVALANG)
ADD_PHASE("simplify", Options::O2)
ADD_PHASE("inline", Options::O2 && Options::useInline)
ADD_PHASE("ConstantFold", Options::O2)
// mephase begin
ADD_PHASE("mecfgbuild", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("injectiv", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("ssatab", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("aliasclass", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("ssa", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("dse", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("irmapbuild", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("ivcanon", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("hprop", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("hdse", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("lfopreemit", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("deptest", CLANG && MeOption::optLevel >= 3)
ADD_PHASE("mecfgbuild", MeOption::optLevel >= 2 || JAVALANG)
ADD_PHASE("cfgOpt", CLANG && MeOption::optLevel >= 2)
ADD_PHASE("bypatheh", JAVALANG && MeOption::optLevel >= 2)
ADD_PHASE("loopcanon", MeOption::optLevel >= 2)
ADD_PHASE("splitcriticaledge", MeOption::optLevel >= 2)
ADD_PHASE("ssatab", MeOption::optLevel >= 2 || JAVALANG)
ADD_PHASE("aliasclass", MeOption::optLevel >= 2 || JAVALANG)
ADD_PHASE("ssa", MeOption::optLevel >= 2 || JAVALANG)
ADD_PHASE("dse", MeOption::optLevel >= 2)
ADD_PHASE("analyzector", JAVALANG)
ADD_PHASE("valueRangePropagation", JAVALANG && MeOption::optLevel >= 2)
ADD_PHASE("abcopt", JAVALANG && MeOption::optLevel >= 2)
ADD_PHASE("ssadevirt", JAVALANG && MeOption::optLevel >= 2)
ADD_PHASE("hprop", MeOption::optLevel >= 2)
ADD_PHASE("hdse", MeOption::optLevel >= 2)
ADD_PHASE("may2dassign", JAVALANG && MeOption::optLevel >= 2)
ADD_PHASE("condbasednpc", JAVALANG && MeOption::optLevel >= 2)
ADD_PHASE("epre", MeOption::optLevel >= 2)
ADD_PHASE("stmtpre", JAVALANG && MeOption::optLevel >= 2)
ADD_PHASE("analyzerc", MeOption::optLevel != 0 && JAVALANG && !MeOption::noRC && !MeOption::gcOnly)
ADD_PHASE("rclowering", JAVALANG && !MeOption::noRC && MeOption::rcLowering && !MeOption::gcOnly)
ADD_PHASE("gclowering", JAVALANG && MeOption::gcOnly)
ADD_PHASE("rename2preg", MeOption::optLevel >= 2)
ADD_PHASE("lpre", MeOption::optLevel >= 2)
ADD_PHASE("copyprop", MeOption::optLevel >= 2 && !JAVALANG)
ADD_PHASE("hdse", MeOption::optLevel >= 2 && !JAVALANG)
ADD_PHASE("storepre", MeOption::optLevel >= 2)
ADD_PHASE("pregrename", MeOption::optLevel >= 2)
ADD_PHASE("bblayout", MeOption::optLevel >= 2 || JAVALANG)
ADD_PHASE("emit", MeOption::optLevel >= 2 || JAVALANG)
ADD_PHASE("meverify", JAVALANG && MeOption::meVerify)
// mephase end
ADD_PHASE("clinit", JAVALANG)
ADD_PHASE("VtableImpl", JAVALANG)
ADD_PHASE("CodeReLayout", MeOption::optLevel == 2 && JAVALANG)
ADD_PHASE("javaehlower", JAVALANG)
ADD_PHASE("MUIDReplacement", JAVALANG)
ADD_PHASE("ConstantFold", JAVALANG)
